openapi: 3.0.0
info:
  title: Flashcard API
  version: 1.0.0
  description: フラッシュカードアプリケーションのAPI仕様

servers:
  - url: https://api.example.com
    description: 本番環境
  - url: http://localhost:8787
    description: 開発環境

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    UserInfo:
      type: object
      description: ユーザー情報の簡易表示形式
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
      required:
        - id
        - name

    DeckResponse:
      type: object
      description: デッキのAPIレスポンス形式
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
          minLength: 1
          maxLength: 100
        description:
          type: string
          maxLength: 1000
        totalCards:
          type: integer
          minimum: 0
          description: デッキに含まれるカードの総数
        dueCards:
          type: integer
          minimum: 0
          description: 学習予定日が到来しているカードの数
        createdBy:
          $ref: '#/components/schemas/UserInfo'
          description: デッキの作成者情報
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
      required:
        - id
        - name
        - description
        - totalCards
        - dueCards
        - createdBy
        - createdAt
        - updatedAt

    CardImage:
      type: object
      properties:
        id:
          type: string
          format: uuid
        url:
          type: string
          format: uri
      required:
        - id
        - url

    TagResponse:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
      required:
        - id
        - name

    CardResponse:
      type: object
      description: カードのAPIレスポンス形式
      properties:
        id:
          type: string
          format: uuid
        frontContent:
          type: string
        backContent:
          type: string
        frontImages:
          type: array
          items:
            $ref: '#/components/schemas/CardImage'
          description: カード表面の画像一覧
        backImages:
          type: array
          items:
            $ref: '#/components/schemas/CardImage'
          description: カード裏面の画像一覧
        tags:
          type: array
          items:
            type: string
        easeFactor:
          type: number
          format: float
          minimum: 1.3
        interval:
          type: integer
          minimum: 0
        nextStudyDate:
          type: string
          format: date-time
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
      required:
        - id
        - frontContent
        - backContent
        - frontImages
        - backImages
        - tags
        - easeFactor
        - interval
        - nextStudyDate
        - createdAt
        - updatedAt

    PaginatedResponse:
      type: object
      description: ページネーション付きレスポンスの共通形式
      properties:
        data:
          type: array
          description: レスポンスデータの配列
        metadata:
          type: object
          properties:
            nextCursor:
              type: string
              nullable: true
              description: 次ページの開始位置を示すカーソル。最後のページの場合はnull
            limit:
              type: integer
              minimum: 1
              maximum: 50
              description: リクエストで指定された1ページあたりの取得上限数
            total:
              type: integer
              minimum: 0
              description: 現在のページに含まれるデータ数
          required:
            - nextCursor
            - limit
            - total
      required:
        - data
        - metadata

    PaginatedDecksResponse:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/DeckResponse'
        metadata:
          type: object
          properties:
            nextCursor:
              type: string
              nullable: true
              description: 次ページの開始位置を示すカーソル。最後のページの場合はnull
            limit:
              type: integer
              minimum: 1
              maximum: 50
              description: リクエストで指定された1ページあたりの取得上限数
            total:
              type: integer
              minimum: 0
              description: 現在のページに含まれるデータ数
          required:
            - nextCursor
            - limit
            - total
      required:
        - data
        - metadata

    PaginatedCardsResponse:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/CardResponse'
        metadata:
          type: object
          properties:
            nextCursor:
              type: string
              nullable: true
              description: 次ページの開始位置を示すカーソル。最後のページの場合はnull
            limit:
              type: integer
              minimum: 1
              maximum: 50
              description: リクエストで指定された1ページあたりの取得上限数
            total:
              type: integer
              minimum: 0
              description: 現在のページに含まれるデータ数
          required:
            - nextCursor
            - limit
            - total
      required:
        - data
        - metadata

tags:
  - name: decks
    description: デッキ管理に関するエンドポイント
  - name: cards
    description: カード管理に関するエンドポイント
  - name: images
    description: 画像管理に関するエンドポイント
  - name: study
    description: 学習機能に関するエンドポイント
  - name: stats
    description: 統計・分析に関するエンドポイント

paths:
  /api/decks:
    get:
      tags:
        - decks
      summary: デッキ一覧の取得
      description: 認証済みユーザーのデッキ一覧を取得
      security:
        - bearerAuth: []
      parameters:
        - name: cursor
          in: query
          required: false
          schema:
            type: string
          description: ページネーションのカーソル
        - name: limit
          in: query
          required: false
          schema:
            type: integer
            minimum: 1
            maximum: 50
            default: 20
          description: 1ページあたりの取得件数
      responses:
        '200':
          description: デッキ一覧の取得成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedDecksResponse'
        '401':
          description: 認証エラー

    post:
      tags:
        - decks
      summary: 新規デッキの作成
      description: 認証済みユーザーの新規デッキを作成
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  minLength: 1
                  maxLength: 100
                description:
                  type: string
                  maxLength: 1000
              required:
                - name
                - description
      responses:
        '201':
          description: デッキの作成成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeckResponse'
        '400':
          description: リクエストパラメータが不正
        '401':
          description: 認証エラー

  /api/decks/{deckId}:
    get:
      tags:
        - decks
      summary: デッキの詳細取得
      description: 指定されたデッキの詳細情報を取得
      security:
        - bearerAuth: []
      parameters:
        - name: deckId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: デッキ詳細の取得成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeckResponse'
        '401':
          description: 認証エラー
        '403':
          description: アクセス権限エラー
        '404':
          description: デッキが見つからない

    patch:
      tags:
        - decks
      summary: デッキの更新
      description: 指定されたデッキの情報を更新
      security:
        - bearerAuth: []
      parameters:
        - name: deckId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  minLength: 1
                  maxLength: 100
                description:
                  type: string
                  maxLength: 1000
              minProperties: 1
      responses:
        '200':
          description: デッキの更新成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeckResponse'
        '400':
          description: リクエストパラメータが不正
        '401':
          description: 認証エラー
        '403':
          description: アクセス権限エラー
        '404':
          description: デッキが見つからない

    delete:
      tags:
        - decks
      summary: デッキの削除
      description: 指定されたデッキを削除
      security:
        - bearerAuth: []
      parameters:
        - name: deckId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: デッキの削除成功
        '401':
          description: 認証エラー
        '403':
          description: アクセス権限エラー
        '404':
          description: デッキが見つからない

  /api/decks/{deckId}/cards:
    get:
      tags:
        - cards
      summary: デッキ内のカード一覧取得
      description: 指定されたデッキに属するカードの一覧を取得
      security:
        - bearerAuth: []
      parameters:
        - name: deckId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: cursor
          in: query
          required: false
          schema:
            type: string
          description: ページネーションのカーソル
        - name: limit
          in: query
          required: false
          schema:
            type: integer
            minimum: 1
            maximum: 50
            default: 20
          description: 1ページあたりの取得件数
        - name: tag
          in: query
          required: false
          schema:
            type: string
          description: タグでフィルタリング
      responses:
        '200':
          description: カード一覧の取得成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedCardsResponse'
        '401':
          description: 認証エラー
        '403':
          description: アクセス権限エラー
        '404':
          description: デッキが見つからない

    post:
      tags:
        - cards
      summary: 新規カードの作成
      description: |
        指定されたデッキに新しいカードを作成します。
        タグは既存のタグ名を指定します。存在しないタグ名が指定された場合は新規作成されます。
      security:
        - bearerAuth: []
      parameters:
        - name: deckId
          in: path
          required: true
          schema:
            type: string
            format: uuid
          description: カードを作成するデッキのID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                frontContent:
                  type: string
                  minLength: 1
                  maxLength: 1000
                  description: カード表面のテキストコンテンツ
                backContent:
                  type: string
                  minLength: 1
                  maxLength: 1000
                  description: カード裏面のテキストコンテンツ
                frontImages:
                  type: array
                  items:
                    type: string
                    format: uuid
                  description: カード表面の画像ID配列（事前にアップロード済みの画像のID）
                  maxItems: 10
                backImages:
                  type: array
                  items:
                    type: string
                    format: uuid
                  description: カード裏面の画像ID配列（事前にアップロード済みの画像のID）
                  maxItems: 10
                tags:
                  type: array
                  items:
                    type: string
                    minLength: 1
                    maxLength: 50
                  description: |
                    タグ名の配列。
                    既存のタグ名を指定した場合はそのタグが使用され、
                    新しいタグ名を指定した場合は新規タグが作成されます。
                  maxItems: 20
              required:
                - frontContent
                - backContent
      responses:
        '201':
          description: カードの作成成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CardResponse'
        '400':
          description: |
            リクエストパラメータが不正
            - テキストコンテンツの長さが制限を超えている
            - 画像IDが存在しない
            - タグ名の長さが制限を超えている
        '401':
          description: 認証エラー
        '403':
          description: アクセス権限エラー（指定されたデッキへのアクセス権限がない）
        '404':
          description: デッキが見つからない
        '409':
          description: |
            リソースの競合
            - 既に削除された画像IDが指定された
            - デッキが既に削除されている

  /api/decks/{deckId}/cards/{cardId}:
    get:
      tags:
        - cards
      summary: カードの詳細取得
      description: 指定されたカードの詳細情報を取得
      security:
        - bearerAuth: []
      parameters:
        - name: deckId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: cardId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: カード詳細の取得成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CardResponse'
        '401':
          description: 認証エラー
        '403':
          description: アクセス権限エラー
        '404':
          description: カードが見つからない

    patch:
      tags:
        - cards
      summary: カードの更新
      description: 指定されたカードの情報を更新
      security:
        - bearerAuth: []
      parameters:
        - name: deckId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: cardId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                frontContent:
                  type: string
                  minLength: 1
                  maxLength: 1000
                backContent:
                  type: string
                  minLength: 1
                  maxLength: 1000
                tags:
                  type: array
                  items:
                    type: string
              minProperties: 1
      responses:
        '200':
          description: カードの更新成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CardResponse'
        '400':
          description: リクエストパラメータが不正
        '401':
          description: 認証エラー
        '403':
          description: アクセス権限エラー
        '404':
          description: カードが見つからない

    delete:
      tags:
        - cards
      summary: カードの削除
      description: 指定されたカードを削除
      security:
        - bearerAuth: []
      parameters:
        - name: deckId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: cardId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: カードの削除成功
        '401':
          description: 認証エラー
        '403':
          description: アクセス権限エラー
        '404':
          description: カードが見つからない

  /api/images/upload:
    post:
      tags:
        - images
      summary: 画像のアップロード
      description: |
        カードの表面または裏面に使用する画像をアップロードします。
        アップロードされた画像は一時的にR2に保存され、
        カードの作成・編集時に実際に使用されます。
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                image:
                  type: string
                  format: binary
                  description: アップロードする画像ファイル（PNG、JPEG）
              required:
                - image
      responses:
        '200':
          description: 画像アップロード成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  imageKey:
                    type: string
                    description: R2に保存された画像のキー
                  url:
                    type: string
                    format: uri
                    description: 画像のプレビューURL
                required:
                  - imageKey
                  - url
        '400':
          description: |
            無効なリクエスト
            - サポートされていないファイル形式
            - ファイルサイズ超過（2MB以上）
            - 画像サイズ超過（1920x1080px以上）

  /api/decks/{deckId}/study/cards:
    get:
      tags:
        - study
      summary: 学習対象カードの取得
      description: |
        指定されたデッキから学習すべきカードのリストを取得します。
        以下の条件で優先順位付けされます：
        1. 次回学習日が到来しているカード（復習カード）
        2. 未学習のカード（新規カード）
      security:
        - bearerAuth: []
      parameters:
        - name: deckId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: limit
          in: query
          description: 取得する学習カードの最大数
          required: false
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 20
        - name: includeNewCards
          in: query
          description: 新規カードを含めるかどうか
          required: false
          schema:
            type: boolean
            default: true
      responses:
        '200':
          description: 学習カードの取得成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  cards:
                    type: array
                    items:
                      $ref: '#/components/schemas/CardResponse'
                  totalCards:
                    type: integer
                    description: 取得したカードの総数
                  newCards:
                    type: integer
                    description: 新規カードの数
                  reviewCards:
                    type: integer
                    description: 復習カードの数
                required:
                  - cards
                  - totalCards
                  - newCards
                  - reviewCards
        '404':
          description: デッキが見つからない

  /api/decks/{deckId}/cards/{cardId}/study:
    post:
      tags:
        - study
      summary: 学習結果の記録
      description: |
        カードの学習結果を記録し、SM-2アルゴリズムに基づいて
        次回学習日と易しさ係数を更新します。
      security:
        - bearerAuth: []
      parameters:
        - name: deckId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: cardId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                grade:
                  type: integer
                  minimum: 0
                  maximum: 5
                studiedAt:
                  type: string
                  format: date-time
              required:
                - grade
                - studiedAt
      responses:
        '200':
          description: 学習結果の記録成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  nextStudyDate:
                    type: string
                    format: date-time
                  easeFactor:
                    type: number
                    format: float
                  interval:
                    type: integer
                required:
                  - nextStudyDate
                  - easeFactor
                  - interval
        '404':
          description: デッキまたはカードが見つからない

  /api/stats/decks/{deckId}:
    get:
      tags:
        - stats
      summary: デッキの学習統計取得
      description: |
        指定されたデッキの学習進捗や統計情報を取得します。
      security:
        - bearerAuth: []
      parameters:
        - name: deckId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: period
          in: query
          description: 集計期間（daily/weekly/monthly）
          required: false
          schema:
            type: string
            enum: [daily, weekly, monthly]
            default: daily
      responses:
        '200':
          description: 統計情報の取得成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  totalCards:
                    type: integer
                    description: デッキ内の総カード数
                  newCards:
                    type: integer
                    description: 未学習カードの数
                  accuracyTrend:
                    type: array
                    description: 正答率の推移
                    items:
                      type: object
                      properties:
                        date:
                          type: string
                          format: date
                        accuracy:
                          type: number
                          format: float
                  studyCountTrend:
                    type: array
                    description: 学習カード数の推移
                    items:
                      type: object
                      properties:
                        date:
                          type: string
                          format: date
                        count:
                          type: integer
                required:
                  - totalCards
                  - newCards
                  - accuracyTrend
                  - studyCountTrend
        '404':
          description: デッキが見つからない

  /api/stats/decks/{deckId}/cards/{cardId}:
    get:
      tags:
        - stats
      summary: カードの学習統計取得
      description: |
        指定されたカードの学習履歴や統計情報を取得します。
      security:
        - bearerAuth: []
      parameters:
        - name: deckId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: cardId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: カード統計の取得成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  totalStudyCount:
                    type: integer
                    description: 総学習回数
                  accuracy:
                    type: number
                    format: float
                    description: 正答率
                  lastStudiedAt:
                    type: string
                    format: date-time
                    description: 最後の学習日時
                  studyHistory:
                    type: array
                    description: 学習履歴
                    items:
                      type: object
                      properties:
                        studiedAt:
                          type: string
                          format: date-time
                        grade:
                          type: integer
                          minimum: 0
                          maximum: 5
                required:
                  - totalStudyCount
                  - accuracy
                  - studyHistory
        '404':
          description: デッキまたはカードが見つからない

  /api/tags:
    get:
      tags:
        - tags
      summary: タグ一覧の取得
      description: |
        システムに登録されている全タグを取得します。
        カードへの紐付け時の入力補完などに使用します。
      security:
        - bearerAuth: []
      parameters:
        - name: q
          in: query
          description: タグ名の部分一致検索
          required: false
          schema:
            type: string
        - name: limit
          in: query
          description: 取得する最大件数
          required: false
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 50
      responses:
        '200':
          description: タグ一覧の取得成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  tags:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          format: uuid
                        name:
                          type: string
                required:
                  - tags 